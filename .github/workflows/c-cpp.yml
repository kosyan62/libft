name: Build and Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache libft.a
        id: cache-libft
        uses: actions/cache@v4
        with:
          path: libft
          key: libft-${{ hashFiles('libft/**/*') }}

      - name: Build libft
        if: steps.cache-libft.outputs.cache-hit != 'true'
        run: make -C libft && make -C libft so && make -C libft clean

  test_libft:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Restore libft cache
        uses: actions/cache@v4
        with:
          path: libft
          key: libft-${{ hashFiles('libft/**/*') }}

      - name: Install Dependencies
        run: sudo apt-get install -y libbsd-dev libncurses-dev

      - name: Install and Build libft-unit-test
        run: |
          git clone https://github.com/alelievr/libft-unit-test.git libft-unit-test
          make -C libft-unit-test

      - name: Run Tests
        run: bash -c "cd libft-unit-test && ./run_test"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: libft-unit-test/result.log

  test_printf:
    runs-on: ubuntu-latest
    needs: [build, test_libft]
    steps:
      - uses: actions/checkout@v4

      - name: Restore libft cache
        uses: actions/cache@v4
        with:
          path: libft
          key: libft-${{ hashFiles('libft/**/*') }}

      - name: Copy libft.a to libftprintf.a
        run: cp libft/libft.a libftprintf.a

      - name: Install and Prepare ft_printf_tester
        run: |
          git clone https://github.com/paulo-santana/ft_printf_tester.git
          sed -i '/^_bonus:/ {n; d;}' ft_printf_tester/Makefile
          sed -i '/^${LIBFTPRINTF}:/ {n; d;}' ft_printf_tester/Makefile

      - name: Run Tests
        run: |
          for i in {1..10}; do
            echo "Running test iteration $i"
            (cd ft_printf_tester && sh test > result.log 2>/dev/null || true)
            if [ -f ft_printf_tester/result.log ]; then
              echo "Test iteration $i completed"
              if tail -n 1 ft_printf_tester/result.log | grep -q "Tests OK"; then
                echo "Test iteration $i passed"
                echo "Result log:"
                cat ft_printf_tester/result.log
                exit 0
              else
                echo "Test iteration $i failed"
                echo "Result log:"
                cat ft_printf_tester/result.log
                sleep 1
              fi
            else
              echo "Test iteration $i failed to create result.log"
            fi
          done
          exit 1

      - name: Check Result
        run: |
          if tail -n 1 ft_printf_tester/result.log | grep -q "100%"; then
            echo "Tests passed"
            exit 0
          else
            exit 1
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: printf_results
          path: ft_printf_tester/result.log
